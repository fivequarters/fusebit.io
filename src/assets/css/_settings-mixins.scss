@mixin font-size($size) {
    $base: 16;
    font-size: $size + px;
    font-size: ($size / $base) * 1rem;
}

@mixin box-shadow($x, $y, $blur, $color, $spread: 0) {
    -webkit-box-shadow: $x $y $blur $spread $color;
    -moz-box-shadow: $x $y $blur $spread $color;
    box-shadow: $x $y $blur $spread $color;
}

@mixin prefix($property, $value, $onlyValue: false) {
    //$vendors: 'webkit moz ms o';
    $vendors: webkit moz ms o;
    $default: true;

    @if $vendors {
        @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $property}: #{$value};
        }
    }

    @if $default {
        #{$property}: #{$value};
    }
}

@mixin titles($lightTheme: true) {
    @include font-size(48);
    line-height: 57.6px;
    font-weight: 800;
    letter-spacing: -0.02em;
    margin-bottom: 1.5rem;

    @if $lightTheme {
        color: var(--dark);
    } @else {
        color: var(--neutralLight);
    }

    & > span {
        font-family: var(--sora);
        color: var(--orange);
    }

    i {
        transition: none;
        animation: caret 0.6s infinite;
    }

    @media only screen and (max-width: 1200px) {
        @include font-size(36);
        line-height: 42px;
        margin-bottom: 1rem;
    }

    @media only screen and (max-width: 700px) {
        @include font-size(32);
        line-height: 38.4px;
    }
}

@function convertDegToVW($angle) {
    @return round($angle * 2.22);
}

@mixin angle-edge(
    $angle,
    $angle-position-y,
    $angle-position-x,
    $angle-position-bottom-x: '',
    $fallback: true,
    $fallback-color: #fff
) {
    position: relative;
    overflow: hidden;

    // Converts degrees to VW, 100vw = 45deg using this technique
    @if $angle > 45 {
        $angle: 0;
        @error 'Invalid angle, it must be between 1-45';
    }
    @if $angle < 46 {
        $angle: convertDegToVW($angle);
    }

    @if $angle-position-bottom-x == '' {
        $angle-position-bottom-x: $angle-position-x;
    }

    $angle-calc-top: calc(0% + #{$angle}vw);
    $angle-calc-bottom: calc(100% - #{$angle}vw);

    $clip-path-top: 0 0, 100% 0;
    $clip-path-bottom: 100% 100%, 0 100%;

    $border-width-top: '';
    $border-width-bottom: '';
    $border-color-top: '';
    $border-color-bottom: '';

    @if $angle-position-y == 'top' or $angle-position-y == 'both' {
        @if $angle-position-x == 'left' {
            $clip-path-top: 0 $angle-calc-top, 100% 0;

            $border-width-top: #{$angle + 1}vw 100vw 0 0;
        }

        @if $angle-position-x == 'right' {
            $clip-path-top: 0 0, 100% $angle-calc-top;

            $border-width-top: #{$angle + 1}vw 0 0 100vw;
        }

        $border-color-top: $fallback-color transparent transparent transparent;
    }

    @if $angle-position-y == 'bottom' or $angle-position-y == 'both' {
        @if $angle-position-y ==
            'both' and
            $angle-position-x !=
            $angle-position-bottom-x
        {
            $angle-position-x: $angle-position-bottom-x;
        }

        @if $angle-position-x == 'left' {
            $clip-path-bottom: 100% 100%, 0 $angle-calc-bottom;

            $border-width-bottom: 0 100vw #{$angle + 1}vw 0;
        }

        @if $angle-position-x == 'right' {
            $clip-path-bottom: 100% $angle-calc-bottom, 0 100%;

            $border-width-bottom: 0 0 #{$angle + 1}vw 100vw;
        }

        $border-color-bottom: transparent
            transparent
            $fallback-color
            transparent;
    }

    $clip-path: polygon($clip-path-top, $clip-path-bottom);
    clip-path: $clip-path;

    // Fallback for clip-path with solid colours
    @if $fallback {
        @supports not (clip-path: $clip-path) {
            &::before,
            &::after {
                content: '';
                position: absolute;
                left: 0;
                z-index: 10;
                display: block;
                border-style: solid;
            }

            @if $angle-position-y == 'top' or $angle-position-y == 'both' {
                &::before {
                    top: 0;
                    border-width: $border-width-top;
                    border-color: $border-color-top;
                }
            }

            @if $angle-position-y == 'bottom' or $angle-position-y == 'both' {
                &::after {
                    bottom: 0;
                    border-width: $border-width-bottom;
                    border-color: $border-color-bottom;
                }
            }
        }
    }
}
