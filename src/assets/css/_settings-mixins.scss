// This mixin is deprecated, DO NOT use it
@mixin font-size($size) {
    $base: 16;
    font-size: $size + px;
    font-size: ($size / $base) * 1rem;
}

@mixin blogButton(
    $backgroundColor,
    $backgroundColorHover,
    $fontSize,
    $padding
) {
    font-size: $fontSize;
    position: relative;
    display: inline-block;
    text-decoration: none;
    width: fit-content;
    padding: $padding;
    transform: translateY(-1.2px);
    margin: 0 2px;
    background: $backgroundColor;
    line-height: 27px;
    color: #03032d;
    border-radius: 2rem;
    z-index: 5;
    transition: all 0.2s ease-in-out;
    display: inline-flex;
    align-items: center;

    svg {
        position: relative;
        margin-left: 0.8rem;
        width: 6px;
        transition: all 0.2s ease-in-out;
        path {
            stroke: var(--white);
        }
    }

    &:hover {
        background-color: $backgroundColorHover;
        svg {
            transform: translateX(0.5rem) scale(1.2);
        }
    }

    &:active {
        transition: none;
        background: var(--yellow);
    }

    @media (max-width: 992px) {
        font-size: 16px;
        height: 28px;
    }
}

@mixin box-shadow($x, $y, $blur, $color, $spread: 0) {
    -webkit-box-shadow: $x $y $blur $spread $color;
    -moz-box-shadow: $x $y $blur $spread $color;
    box-shadow: $x $y $blur $spread $color;
}

@mixin prefix($property, $value, $onlyValue: false) {
    //$vendors: 'webkit moz ms o';
    $vendors: webkit moz ms o;
    $default: true;

    @if $vendors {
        @each $vendor in $vendors {
            #{"-" + $vendor + "-" + $property}: #{$value};
        }
    }

    @if $default {
        #{$property}: #{$value};
    }
}

@mixin titles($lightTheme: true) {
    @include font-size(48);
    line-height: 57.6px;
    font-weight: 800;
    letter-spacing: -0.02em;
    margin-bottom: 1.5rem;

    @if $lightTheme {
        color: var(--dark);
    } @else {
        color: var(--neutralLight);
    }

    & > span {
        font-family: var(--sora);
        color: var(--orange);
    }

    i {
        transition: none;
        animation: caret 0.6s infinite;
    }

    @media only screen and (max-width: 1200px) {
        @include font-size(36);
        line-height: 42px;
        margin-bottom: 1rem;
    }

    @media only screen and (max-width: 700px) {
        @include font-size(32);
        line-height: 38.4px;
    }
}

@mixin mark-offset(
    $desktop-offset,
    $mobile-offset,
    $isLeft: false,
    $fixBottom: false
) {
    --mark-offset: #{$desktop-offset};

    @if $isLeft {
        right: calc(50% + var(--mark-offset));
    } @else {
        left: calc(50% + var(--mark-offset));
    }

    @if $fixBottom {
        bottom: calc(var(--triangleHeight) - 1px);
    }

    width: calc(50% - var(--mark-offset));

    @media only screen and (max-width: 1200px) {
        --mark-offset: #{$mobile-offset};
    }
}

@mixin showOnly($viewport) {
    display: none;

    @if ($viewport == 'tablet') {
        @media (max-width: 768px) {
            display: block;
        }
    }

    @if ($viewport == 'mobile') {
        @media (max-width: 576px) {
            display: block;
        }
    }
}
