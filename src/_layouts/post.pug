extends default.pug

block page_variable
    - const ogConfig = { hero: `${site.url}${filters.getImageUrl(`blog/${post_image}`, 900)}`, site: og_image }
    - var pageClass = 'blog__page'
    - var title = post_title
    - var slug = post_slug
    - var description = post_excerpt
    - var og_image = typeof post_og_image !== "undefined" ? ogConfig[post_og_image] || post_og_image : ogConfig.hero

block content
    section.section
        .background.background--neutralLight
        .background.background--straight.background--neutralLight
        .layout.post__hero-layout
            .post__info
                each author, i in (post_authors || [])
                    .post__author
                        if author.avatar
                            img(src= author.avatar width="50" height="50")
                        span.post__author-name #{author.name}
                    if i !== post_authors.length - 1
                        .post__info-divider

                if !(post_authors || []).length
                    .post__author
                        if post_author_avatar
                            img(src= post_author_avatar width="50" height="50")
                        span.post__author-name #{post_author}
                        
                .post__info-divider
                span.post__date= `${filters.format(new Date(date.replace('-', '/')), 'd MMMM yyyy')}`
            h1 #{post_title}
            - const postTags = tags.filter(tag => tag !== 'post')
            if postTags.length > 0
                .post__tags
                    img(src='/assets/images/tag.svg' alt="Tag") 
                    div 
                        each t, index in postTags
                            a.post__tag(href= `/blog/tags/${t}/`) #{t}
                            if index + 1 === postTags.length - 1
                                | #{' & '} 
                            else if index + 1 < postTags.length - 1
                                | #{', '}
    section.section.section--overflow.section--no-margin
        .background.background--white
        .layout.post__content-layout.layout--no-padding-bottom
            .post__content
                .post__hero-image
                    != filters.getImageTag(`blog/${post_image}`, 'Hero Image', null, { id:"hero-image" })
                article.article
                    .post__sidebar
                        .post__sidebar--wrapper
                            .post__sidebar--toc-wrapper
                                h5.post__sidebar--title Table of Contents
                                .post__sidebar--sections
                                if posts_related
                                    .post__sidebar--separator
                                    .post__sidebar--title.post__sidebar--title-cta(id="related-content-cta") Related Content
                            if docs_related
                                .post__sidebar--toc-wrapper.post__sidebar--toc-wrapper-margin
                                    each doc in docs_related
                                        a.post__sidebar--section.post__sidebar--section-link(href=doc.url target="_blank" rel="noopener") 
                                            <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                <path d="M7.64654 4.46421L8.88398 3.22677C9.1393 2.97122 9.44246 2.76847 9.77616 2.63011C10.1099 2.49175 10.4675 2.42049 10.8288 2.42041C11.19 2.42033 11.5477 2.49142 11.8815 2.62962C12.2153 2.76782 12.5185 2.97043 12.774 3.22587C13.0294 3.4813 13.232 3.78457 13.3702 4.11833C13.5084 4.45209 13.5795 4.80981 13.5794 5.17105C13.5793 5.53229 13.5081 5.88998 13.3697 6.22368C13.2314 6.55737 13.0286 6.86054 12.7731 7.11586L11.0053 8.88363C10.7499 9.13899 10.4468 9.34155 10.1131 9.47975C9.77949 9.61795 9.42189 9.68908 9.06075 9.68908C8.69962 9.68908 8.34202 9.61795 8.00837 9.47975C7.67473 9.34155 7.37157 9.13899 7.11621 8.88363" stroke="#03032d" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                                <path d="M8.35378 11.5354L7.11635 12.7729C6.86103 13.0284 6.55786 13.2312 6.22416 13.3695C5.89047 13.5079 5.53278 13.5791 5.17154 13.5792C4.8103 13.5793 4.45258 13.5082 4.11881 13.37C3.78505 13.2318 3.48179 13.0292 3.22635 12.7738C2.97092 12.5183 2.76831 12.2151 2.63011 11.8813C2.4919 11.5475 2.42081 11.1898 2.4209 10.8286C2.42098 10.4673 2.49224 10.1096 2.6306 9.77595C2.76896 9.44226 2.9717 9.13909 3.22726 8.88377L4.99503 7.116C5.25039 6.86064 5.55355 6.65808 5.88719 6.51988C6.22084 6.38168 6.57844 6.31055 6.93957 6.31055C7.30071 6.31055 7.65831 6.38168 7.99195 6.51988C8.3256 6.65808 8.62875 6.86064 8.88412 7.116" stroke="#03032d" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            | #{doc.text}
                            if post_cta
                                .post__sidebar--cta-wrapper
                                    +cta(post_cta.text, post_cta.url, 'post__sidebar--cta', null, true, "eventName", "eventLocation", true, "_blank", "noopener")
                    .post__article!= content
            .post__navigation-container
                - const prevPost = filters.getNextCollectionItem(collections.post, page) || null
                - const nextPost = filters.getPreviousCollectionItem(collections.post, page) || null
                hr
                .post__navigation-buttons 
                    if prevPost
                        a.post__navigation-button.post__navigation-button--left(href= prevPost.url) 
                            img(src='/assets/images/arrow--left.svg' alt="Arrow")
                            | Previous
                            .post__navigation-button-underline

                    if nextPost 
                        a.post__navigation-button.post__navigation-button--right(href= nextPost.url)
                            | Next
                            img(src='/assets/images/arrow--left.svg' alt="Arrow")
                            .post__navigation-button-underline
    section
        if posts_related
            .layout.post__trending-layout
                h2 Related Content
                .post-card-container.post__trending-list(id="related-content")
                    each relatedPost in posts_related
                        each post in [...collections.post].filter((post) => post.data.post_slug === relatedPost).slice(0, 3)
                            +postCard(post.url, post.data.post_image, post.data.date, post.data.post_title, post.data.post_excerpt)
        else 
            .layout.post__trending-layout
                h2 Most Recent
                .post-card-container.post__trending-list
                    each post in [...collections.post].filter((post) => post.data.post_slug !== slug).reverse().slice(0, 3)
                        +postCard(post.url, post.data.post_image, post.data.date, post.data.post_title, post.data.post_excerpt)

block scripts
    script.
        analytics.page('Blog Post', { objectLocation: 'Blog Post', domain: 'fusebit.io' });

        function animateCopy(evt) {
            if (evt.target.classList.value.indexOf("copied") < 0) {
                evt.target.innerHTML = "Copied!";
                evt.target.classList.add("copied");
                setTimeout(function() { 
                    evt.target.innerHTML = "Copy";
                    evt.target.classList.remove("copied");
                }, 2000);
            }
        }

        function handleCopyClick(evt) {
            const { children } = evt.target.parentElement;
            const { innerText } = Array.from(children)[0];
            navigator.clipboard.writeText(innerText);
            animateCopy(evt);
        }
    
        const highlights = document.querySelectorAll("pre");

        highlights.forEach(codeBlock => {
            const copy = document.createElement("button");
            copy.innerHTML = "Copy";
            copy.addEventListener("click", handleCopyClick);
            codeBlock.append(copy);
            codeBlock.addEventListener("scroll", (e) => {
                const scrollLeft = e.currentTarget.scrollLeft;
                const copyButton = codeBlock.querySelector("button");
                copyButton.style.transform = `translateX(${scrollLeft}px)`;
            });
        });
        
        const links = document.querySelectorAll('a');
        links.forEach((link) => {
            const title = link.title;
            if (title.indexOf("CTA") > 0) {
                const buttonSize = title.indexOf("SMALL") > 0 ? "Small" : "Large";
                
                analytics.trackLink(link, "Blog Post Button Clicked", {
                    objectLocation: "Blog",
                    domain: 'fusebit.io',
                    buttonSize,
                });
            }
        });

        const children = document.querySelector(".post__article")?.childNodes;
        const sidebar = document.querySelector(".post__sidebar--sections");
        const relatedContent = document.getElementById("related-content");
        const relatedPostsCta = document.getElementById("related-content-cta");
        for (child in children) {
            const element = children[child];
            if (element?.nodeName?.includes("H2")) {
                const section = document.createElement("div");
                section.innerText = element.innerText;
                section.classList.add("post__sidebar--section");
                if (sidebar.childElementCount < 1) {
                    section.classList.add("post__sidebar--section-active");
                }
                section.addEventListener("click", () => {
                    element.scrollIntoView();
                });
                sidebar.append(section);
            }
        }

        if (relatedContent && relatedPostsCta) {
            relatedPostsCta.addEventListener("click", () => {
                relatedContent.scrollIntoView();
            });
        }

        window.addEventListener("scroll", (e) => {
            for (child in children) {
                const element = children[child];
                const sections = Array.from(sidebar?.children);
                if (element?.nodeName?.includes("H2") && isInViewport(element)) {
                    const newSectionToSelect = sections.find((section) => section.innerText === element.innerText);
                    const currentSelectedSection = document.querySelector(".post__sidebar--section-active");
                    const currentSelectedHeader = document.querySelector(".post__header-active");
                    if (currentSelectedSection !== newSectionToSelect) {
                        currentSelectedSection.classList.remove("post__sidebar--section-active");
                        newSectionToSelect.classList.add("post__sidebar--section-active");
                    }
                }
            }
        }, { passive: true });

